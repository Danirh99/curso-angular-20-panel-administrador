import {Component, inject} from '@angular/core';
import {ClientesService} from '../../../../services/clientes-service';
import {Cliente} from '../../../../models/cliente';

@Component({
  selector: 'app-tabla-clientes',
  imports: [],
  templateUrl: './tabla-clientes.html',
})
export class TablaClientes {
  // Inyecta el servicio de clientes usando la funci칩n inject (en lugar de constructor)
  clientesService: ClientesService = inject(ClientesService)

  // --- PROPIEDADES DEL COMPONENTE ---

  clientes: Cliente[] = [];         // Aqu칤 se almacenar치 la lista completa de clientes cargados
  clientesPorPagina: Cliente[] = [];// Aqu칤 solo los clientes de la p치gina actual (para paginaci칩n)
  paginaActual: number = 1;         // N칰mero de la p치gina actual (comienza en 1)
  tamanoPagina: number = 10;        // Cantidad de clientes a mostrar por p치gina


  // --- CICLO DE VIDA ---

  // ngOnInit es un hook de Angular que se ejecuta cuando el componente se inicializa
  ngOnInit(): void {
    // Llamamos a la funci칩n que carga los clientes desde el servicio
    this.cargarClientes();
  }

  // --- M칄TODOS PRINCIPALES ---

  // Carga los clientes desde el servicio y establece la primera p치gina
  cargarClientes(): void {
    this.clientesService.getClientes().subscribe({
      next: (data) => {
        // Guardamos los clientes en la propiedad clientes
        this.clientes = data;
        // Mostramos la primera p치gina por defecto
        this.cambiarPagina(1);
      },
      error: (err) => console.error('Error cargando clientes:', err) // Manejo de errores en la carga
    });
  }

  // Cambia la p치gina actual y recalcula qu칠 clientes se deben mostrar
  cambiarPagina(pagina: number): void {
    this.paginaActual = pagina;             // Actualiza el n칰mero de p치gina actual
    const inicio = (pagina - 1) * this.tamanoPagina; // 칈ndice inicial de clientes a mostrar
    const fin = inicio + this.tamanoPagina;          // 칈ndice final de clientes a mostrar
    // Filtra el arreglo completo de clientes para obtener solo los de la p치gina
    this.clientesPorPagina = this.clientes.slice(inicio, fin);
  }

  // Calcula el n칰mero total de p치ginas en funci칩n de los clientes y el tama침o de p치gina
  paginasTotales(): number {
    return Math.ceil(this.clientes.length / this.tamanoPagina);
  }

  // Genera un arreglo con los n칰meros de p치gina [1, 2, 3, ...] para iterar en el HTML
  paginasArray(): number[] {
    return Array.from({ length: this.paginasTotales() }, (_, i) => i + 1);
    // 游녡 Usa Array.from para crear un array con tantos elementos como p치ginas haya
    // y les asigna los n칰meros de p치gina empezando en 1.
  }

}
